version: 2.1
orbs:
  codecov: codecov/codecov@5.4.3
jobs:
  test_unit_go:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.23.9
      - image: cimg/redis:7.2
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: |
            go mod download
            go install github.com/go-task/task/v3/cmd/task@latest
            go install gotest.tools/gotestsum@latest
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run unit tests
          command: |
            task test:unit
      - codecov/upload:
          files: tmp/cover.unit.out
          flags: unit
  test_integration_go:
    working_directory: ~/repo
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          name: Install Go
          command: |
            wget https://go.dev/dl/go1.23.9.linux-amd64.tar.gz
            sudo tar -C /usr/local -xzf go1.23.9.linux-amd64.tar.gz
            echo 'export PATH=$PATH:/usr/local/go/bin' >> $BASH_ENV
      - run:
          name: Verify Go installation
          command: go version
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: |
            go mod download
            go install github.com/go-task/task/v3/cmd/task@latest
            go install gotest.tools/gotestsum@latest
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run integration tests
          command: |
            task test:integration
      - codecov/upload:
          files: tmp/cover.integration.out
          flags: integration
  build_go:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.23.9
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: |
            go mod download
            go install github.com/go-task/task/v3/cmd/task@latest
            go install gotest.tools/gotestsum@latest
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Build application code
          command: |
            task build
  lint_go:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.23.9
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            go mod download
            go install github.com/go-task/task/v3/cmd/task@latest
            go install honnef.co/go/tools/cmd/staticcheck@latest
      - run:
          name: Lint all golang code
          command: |
            task lint
  security_go:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.23.9
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            go mod download
            go install github.com/go-task/task/v3/cmd/task@latest
            go install github.com/securego/gosec/v2/cmd/gosec@latest
      - run:
          name: Run security check for Golang
          command: |
            task security
  build_js:
    working_directory: ~/repo
    docker:
      - image: cimg/node:22.16.0
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            yarn install
      - run:
          name: Build JavaScript bundle
          command: |
            yarn build
  lint_js:
    working_directory: ~/repo
    docker:
      - image: cimg/node:22.16.0
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            yarn install
      - run:
          name: Lint all JavaScript code
          command: |
            yarn lint

workflows:
  lint_build_js:
    jobs:
      - lint_js
      - build_js
  lint_test_build_go:
    jobs:
      - lint_go
      - test_unit_go
      - test_integration_go
      - build_go:
          requires:
            - test_unit_go
            - test_integration_go
